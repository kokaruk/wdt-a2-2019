@using Microsoft.Extensions.Options
@using WdtUtils.Model
@model WdtApiLogin.Controllers.StaffController.CheckViewModel
@inject IOptions<GenericSettingsModel> GenericSettings
@{
    ViewData["Title"] = "Room Availability";
    dynamic rooms = ViewData["Rooms"];
}


<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">@ViewData["Title"] </h1>
</div>
<form class="form-inline" asp-action="Check">
    <div class="form-group col-md-2">
        <label asp-for="RoomId"></label>
        <select asp-for="RoomId" asp-items="rooms" class="form-control"></select>
        <span asp-validation-for="RoomId" class="text-danger"></span>
    </div>
    <div class="form-group col-md-4">
        <label asp-for="StartDate"></label>
        <input required 
               asp-for="StartDate"
               class="form-control"
               min="@($"{ViewBag.MinDate:yyyy-MM-dd}")"
               value="@(Model?.StartDate.Date >= DateTime.Now ? $"{Model?.StartDate:yyyy-MM-dd}" : string.Empty)"/>
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>
    <input type="submit" value="Check Availability" class="btn btn-sm btn-outline-primary"/>
</form>

@if (Model?.Slots != null)
{
    if (Model.Slots.Any())
    {
        <div class="table-responsive space-top-2">
            <table class="table table-striped table-sm table-hover">
                <thead>
                <tr>
                    <th class="col-md-2">@Html.DisplayNameFor(modelItem => Model.Room.Slots.First().StartTime)</th>
                    <th class="col-md-2">@Html.DisplayNameFor(modelItem => Model.Room.Slots.First().Staff)</th>
                    <th class="col-md-2">@Html.DisplayNameFor(modelItem => Model.Room.Slots.First().Student)</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.Slots)
                {
                    <tr>
                        <td class="col-md-2">@item.StartTime</td>
                        <td class="col-md-2">@($"{item.Staff.Name} ({item.Staff.UserID})")</td>
                        <td class="col-md-2">@(item.Student != null ? $"{item.Student.Name} ({item.Student.UserID})" : string.Empty)</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        if (Model.Slots.Count() >= GenericSettings.Value.DailyRoomBookings)
        {
            <div class="alert alert-warning mt-2" role="alert">
                Room is booked out
            </div>
        }
        else
        {
            <div class="btn-toolbar mb-2 mb-md-0">
                <div class="btn-group mr-2">
                    <a asp-action="Create">
                        <input type="button" class="btn btn-sm btn-outline-secondary" value="Add a new slot"/>
                    </a>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info mt-2" role="alert">
            Room is free to book
        </div>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group mr-2">
                <a asp-action="Create">
                    <input type="button" class="btn btn-sm btn-outline-secondary" value="Add a new slot"/>
                </a>
            </div>
        </div>
    }
}